---
interface LinkItem {
  href: string;
  label: string;
}

const { links = [] } = Astro.props as { links: LinkItem[] };
const currentPath = Astro.url.pathname;

const normalize = (p: string) => (p === '/' ? '/' : p.replace(/\/+$/, ''));
const isActive = (href: string) => {
  const a = normalize(href);
  const b = normalize(currentPath);
  if (a === '/') return b === '/';
  return b === a || b.startsWith(a + '/');
};
---
<nav class="flex items-center justify-end" aria-label="Main Navigation">
  <ul class="flex gap-6">
    {links.map((link) => (
      <li>
        <a
          href={link.href}
          class={`text-sm font-medium tracking-wide hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-white/60 rounded px-1 py-0.5 underline-offset-4 decoration-2 hover:underline ${isActive(link.href) ? 'underline' : ''}`}
        >
          {link.label}
        </a>
      </li>
    ))}
  </ul>
  
</nav>
